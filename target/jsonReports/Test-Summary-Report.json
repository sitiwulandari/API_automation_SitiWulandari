[{"line":1,"elements":[{"start_timestamp":"2023-10-23T12:38:17.283Z","line":4,"name":"Test the Create User flow using Happy Path","description":"","id":"test-the-create-user-api-functionality-of-gorest-website;test-the-create-user-flow-using-happy-path","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"undefined"},"line":5,"name":"Create User API Information","match":{},"keyword":"Given "},{"result":{"duration":56000,"status":"skipped"},"line":6,"name":"User calls the \"CreateUserAPI\" using \"POST\" http method","match":{},"keyword":"When "},{"result":{"duration":16000,"status":"skipped"},"line":7,"name":"The API call is sucessful with response code 201","match":{},"keyword":"Then "},{"result":{"duration":8000,"status":"skipped"},"line":8,"name":"The value \"email\" in response is shown as \"test7007@gmail.com\"","match":{},"keyword":"And "},{"result":{"duration":9000,"status":"skipped"},"line":9,"name":"The value \"status\" in response is shown as \"active\"","match":{},"keyword":"And "},{"result":{"duration":11000,"status":"skipped"},"line":10,"name":"The Userid and Useremail are stored for furture utilization","match":{},"keyword":"And "}],"tags":[{"name":"@CreateUser"},{"name":"@HappyPath"}]},{"start_timestamp":"2023-10-23T12:38:17.383Z","line":13,"name":"Test the Create User flow using Error Path to validate the Duplicate User Check","description":"","id":"test-the-create-user-api-functionality-of-gorest-website;test-the-create-user-flow-using-error-path-to-validate-the-duplicate-user-check","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"undefined"},"line":14,"name":"Create User API Information along with an existing user","match":{},"keyword":"Given "},{"result":{"duration":19000,"status":"skipped"},"line":15,"name":"User calls the \"CreateUserAPI\" using \"POST\" http method","match":{},"keyword":"When "},{"result":{"duration":11000,"status":"skipped"},"line":16,"name":"The API call is sucessful with response code 422","match":{},"keyword":"Then "},{"result":{"duration":8000,"status":"skipped"},"line":17,"name":"The value \"field\" in response is shown as \"[email]\"","match":{},"keyword":"And "},{"result":{"duration":8000,"status":"skipped"},"line":18,"name":"The value \"message\" in response is shown as \"[has already been taken]\"","match":{},"keyword":"And "}],"tags":[{"name":"@CreateUser"},{"name":"@ErrorPath"}]}],"name":"Test the Create User API functionality of GORest website","description":"","id":"test-the-create-user-api-functionality-of-gorest-website","keyword":"Feature","uri":"file:src/test/java/features/A_GoRest_API_CreateUser_Tests.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2023-10-23T12:38:17.431Z","line":4,"name":"Test the Get User API flow as Happy Path to fetch female users in active status","description":"","id":"test-the-get-user-api-functionality-of-gorest-website;test-the-get-user-api-flow-as-happy-path-to-fetch-female-users-in-active-status","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"undefined"},"line":5,"name":"Get User API Information filtering a female active user","match":{},"keyword":"Given "},{"result":{"duration":39000,"status":"skipped"},"line":6,"name":"User calls the \"GetUser_QP_API\" using \"GET\" http method","match":{},"keyword":"When "},{"result":{"duration":9000,"status":"skipped"},"line":7,"name":"The API call is sucessful with response code 200","match":{},"keyword":"Then "},{"result":{"duration":28000,"status":"skipped"},"line":8,"name":"The value \"gender\" in response is shown as \"[female]\"","match":{},"keyword":"And "},{"result":{"duration":9000,"status":"skipped"},"line":9,"name":"The value \"status\" in response is shown as \"[active]\"","match":{},"keyword":"And "}],"tags":[{"name":"@GetUser"},{"name":"@HappyPath"}]},{"start_timestamp":"2023-10-23T12:38:17.491Z","line":12,"name":"Test the Get User API flow as Happy Path to fetch male users in inactive status","description":"","id":"test-the-get-user-api-functionality-of-gorest-website;test-the-get-user-api-flow-as-happy-path-to-fetch-male-users-in-inactive-status","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"undefined"},"line":13,"name":"Get User API Information filtering a male inactive user","match":{},"keyword":"Given "},{"result":{"duration":39000,"status":"skipped"},"line":14,"name":"User calls the \"GetUser_QP_API\" using \"GET\" http method","match":{},"keyword":"When "},{"result":{"duration":9000,"status":"skipped"},"line":15,"name":"The API call is sucessful with response code 200","match":{},"keyword":"Then "},{"result":{"duration":8000,"status":"skipped"},"line":16,"name":"The value \"gender\" in response is shown as \"[male]\"","match":{},"keyword":"And "},{"result":{"duration":8000,"status":"skipped"},"line":17,"name":"The value \"status\" in response is shown as \"[inactive]\"","match":{},"keyword":"And "}],"tags":[{"name":"@GetUser"},{"name":"@HappyPath"}]},{"start_timestamp":"2023-10-23T12:38:17.521Z","line":20,"name":"Test the Get User API flow as Happy Path to fetch users whose email ends with .test","description":"","id":"test-the-get-user-api-functionality-of-gorest-website;test-the-get-user-api-flow-as-happy-path-to-fetch-users-whose-email-ends-with-.test","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"undefined"},"line":21,"name":"Get User API Information filtering a user whose email ends with .test","match":{},"keyword":"Given "},{"result":{"duration":10000,"status":"skipped"},"line":22,"name":"User calls the \"GetUser_QP_API\" using \"GET\" http method","match":{},"keyword":"When "},{"result":{"duration":8000,"status":"skipped"},"line":23,"name":"The API call is sucessful with response code 200","match":{},"keyword":"Then "},{"result":{"duration":19000,"status":"skipped"},"line":24,"name":"The value \"email\" in response ends with \".test\"","match":{},"keyword":"And "}],"tags":[{"name":"@GetUser"},{"name":"@HappyPath"}]},{"start_timestamp":"2023-10-23T12:38:17.536Z","line":27,"name":"Test the Get User API flow as Happy Path to fetch a list of users and validate all the five fields in the response","description":"","id":"test-the-get-user-api-functionality-of-gorest-website;test-the-get-user-api-flow-as-happy-path-to-fetch-a-list-of-users-and-validate-all-the-five-fields-in-the-response","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"undefined"},"line":28,"name":"Get User API Information with a filter criteria to fetch a list of users","match":{},"keyword":"Given "},{"result":{"duration":24000,"status":"skipped"},"line":29,"name":"User calls the \"GetUser_QP_API\" using \"GET\" http method","match":{},"keyword":"When "},{"result":{"duration":9000,"status":"skipped"},"line":30,"name":"The API call is sucessful with response code 200","match":{},"keyword":"Then "},{"result":{"duration":6000,"status":"skipped"},"line":31,"name":"Validate if the correct number of users are returned and all the five fields for each returned user is present in the response","match":{},"keyword":"And "}],"tags":[{"name":"@GetUser"},{"name":"@HappyPath"}]},{"start_timestamp":"2023-10-23T12:38:17.581Z","line":34,"name":"Test the Get User API flow as Error Path using an Incorrect User Id","description":"","id":"test-the-get-user-api-functionality-of-gorest-website;test-the-get-user-api-flow-as-error-path-using-an-incorrect-user-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"undefined"},"line":35,"name":"Get User API Information and Incorrect User Id","match":{},"keyword":"Given "},{"result":{"duration":36000,"status":"skipped"},"line":36,"name":"User calls the \"GetUser_PP_API\" using \"GET\" http method","match":{},"keyword":"When "},{"result":{"duration":20000,"status":"skipped"},"line":37,"name":"The API call is sucessful with response code 404","match":{},"keyword":"Then "},{"result":{"duration":76000,"status":"skipped"},"line":38,"name":"The value \"message\" in response is shown as \"Resource not found\"","match":{},"keyword":"And "}],"tags":[{"name":"@GetUser"},{"name":"@ErrorPath"}]}],"name":"Test the Get User API functionality of GORest website","description":"","id":"test-the-get-user-api-functionality-of-gorest-website","keyword":"Feature","uri":"file:src/test/java/features/B_GoRest_API_GetUser_Tests.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2023-10-23T12:38:17.605Z","line":4,"name":"Test the Update User API flow as Happy Path","description":"","id":"test-the-update-user-api-functionality-of-gorest-website;test-the-update-user-api-flow-as-happy-path","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"undefined"},"line":5,"name":"Update User API Information","match":{},"keyword":"Given "},{"result":{"duration":880000,"status":"skipped"},"line":6,"name":"User calls the \"UpdateUserAPI\" using \"PUT\" http method","match":{},"keyword":"When "},{"result":{"duration":16000,"status":"skipped"},"line":7,"name":"The API call is sucessful with response code 200","match":{},"keyword":"Then "},{"result":{"duration":6000,"status":"skipped"},"line":8,"name":"The value \"email\" in response is shown as \"test7007@gmail.com\"","match":{},"keyword":"And "},{"result":{"duration":4000,"status":"skipped"},"line":9,"name":"The value \"status\" in response is shown as \"inactive\"","match":{},"keyword":"And "}],"tags":[{"name":"@UpdateUser"},{"name":"@HappyPath"}]}],"name":"Test the Update User API functionality of GORest website","description":"","id":"test-the-update-user-api-functionality-of-gorest-website","keyword":"Feature","uri":"file:src/test/java/features/C_GoRest_API_UpdateUser_Tests.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2023-10-23T12:38:17.632Z","line":4,"name":"Test the Delete User API flow as Happy Path","description":"","id":"test-the-delete-user-api-functionality-of-gorest-website;test-the-delete-user-api-flow-as-happy-path","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"undefined"},"line":5,"name":"Delete User API Information and User to be deleted","match":{},"keyword":"Given "},{"result":{"duration":34000,"status":"skipped"},"line":6,"name":"User calls the \"DeleteUserAPI\" using \"DELETE\" http method","match":{},"keyword":"When "},{"result":{"duration":15000,"status":"skipped"},"line":7,"name":"The API call is sucessful with response code 204","match":{},"keyword":"Then "}],"tags":[{"name":"@DeleteUser"},{"name":"@HappyPath"}]},{"start_timestamp":"2023-10-23T12:38:17.653Z","line":10,"name":"Test the Delete User API flow as ErrorPath to validate the Incorrect User Deletion Check","description":"","id":"test-the-delete-user-api-functionality-of-gorest-website;test-the-delete-user-api-flow-as-errorpath-to-validate-the-incorrect-user-deletion-check","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"undefined"},"line":11,"name":"Delete User API Information and Incorrect User to be deleted","match":{},"keyword":"Given "},{"result":{"duration":500000,"status":"skipped"},"line":12,"name":"User calls the \"DeleteUserAPI\" using \"DELETE\" http method","match":{},"keyword":"When "},{"result":{"duration":239000,"status":"skipped"},"line":13,"name":"The API call is sucessful with response code 404","match":{},"keyword":"Then "},{"result":{"duration":13000,"status":"skipped"},"line":14,"name":"The value \"message\" in response is shown as \"Resource not found\"","match":{},"keyword":"And "}],"tags":[{"name":"@DeleteUser"},{"name":"@ErrorPath"}]}],"name":"Test the Delete User API functionality of GORest website","description":"","id":"test-the-delete-user-api-functionality-of-gorest-website","keyword":"Feature","uri":"file:src/test/java/features/D_GoRest_API_DeleteUser_Tests.feature","tags":[]}]